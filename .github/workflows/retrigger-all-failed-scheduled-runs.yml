name: Re-trigger Failed Jobs

on:
  workflow_dispatch:

jobs:
  re_run_failed_jobs:
    runs-on: ubuntu-latest
    steps:
      - name: Re-run failed jobs for the latest runs
        uses: actions/github-script@v6
        with:
          script: |
            // List all workflow file names you want to target
            const workflowFiles = [
              "scheduled-regression-altinity-22-3.yml",
              "scheduled-regression-altinity-22-8.yml",
              "scheduled-regression-altinity-23-3.yml",
              "scheduled-regression-altinity-23-8.yml",
              "scheduled-regression-altinity-24-3.yml",
              "scheduled-regression-altinity-24-8.yml",
              "scheduled-regression-clickhouse-24-12.yml",
              "scheduled-regression-clickhouse-head.yml",
              "scheduled-regression-clickhouse-latest.yml",
            ];

            for (const workflowFile of workflowFiles) {
              // Get the latest completed run for this workflow
              const runs = await github.rest.actions.listWorkflowRuns({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: workflowFile,
                per_page: 1,
                status: "completed",
              });

              if (!runs.data.workflow_runs.length) {
                console.log(`No completed runs found for workflow: ${workflowFile}`);
                continue;
              }

              const latestRun = runs.data.workflow_runs[0];
              const runId = latestRun.id;

              console.log(`Re-running only failed jobs for: ${workflowFile} (run_id: ${runId})`);

              // Re-run only the failed jobs from that run
              await github.request(
                "POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs",
                {
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  run_id: runId,
                }
              );
            }
