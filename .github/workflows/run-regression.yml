name: Run CI/CD regression tests
run-name: ${{ github.actor }} is running regression tests
on: 
  workflow_dispatch:
    inputs:
      package:
        description: "Package either 'docker://' or 'https://'. Example: 'https://s3.amazonaws.com/clickhouse-builds/23.3/.../package_release/clickhouse-common-static_23.3.1.64_amd64.deb', or 'docker://clickhouse/clickhouse-server:22.11.6-alpine'"
        required: true
        type: string
        default: docker://clickhouse/clickhouse-server:23.2.2.20
      suite:
        description: "Test suite to run (default: all)"
        type: choice
        options:
          - all
          - aes_encryption
          - aggregate_functions
          - atomic_insert
          - base_58
          - clickhouse_keeper
          - datetime64_extended_range
          - disk_level_encryption
          - dns
          - example
          - extended_precision_data_types
          - functional
          - kafka
          - kerberos
          - ldap
          - lightweight_delete
          - map_type
          - parquet
          - part_moves_between_shards
          - rbac
          - s3
          - s3_aws
          - s3_gcs
          - selects
          - ssl_server
          - tiered_storage
          - tiered_storage_aws
          - tiered_storage_gcs
          - window_functions
          - benchmark
      artifacts:
        description: "Artifact S3 bucket"
        type: choice
        options:
          - internal
          - public

jobs:
  example:
    runs-on: ubuntu-latest
    container: registry.gitlab.com/altinity-public/container-images/multiarch:1.0
    steps:
      - uses: actions/checkout@v3
      - run: pip install -r pip_requirements.txt
      - run: ./example/regression.py --clickhouse-binary-path ${{ inputs.package }} --output classic --log raw.log --test-to-end
      - run: echo ${{ inputs.package }} > package.log.txt
      - run: echo "https://gitlab.com/altinity-qa/clickhouse/cicd/clickhouse-regression/-/pipelines/$GITHUB_RUN_ID" > pipeline_url.log.txt
      - run: tfs --debug --no-colors transform compact raw.log compact.log
      - run: tfs --debug --no-colors transform nice raw.log nice.log.txt 
      - run: tfs --debug --no-colors transform short raw.log short.log.txt
#       - run: tfs --debug --no-colors report coverage - raw.log - $confidential --copyright "Altinity Inc." --logo ./altinity.png | tfs --debug --no-colors document convert > coverage.html
#       - run: tfs --debug --no-colors report results -a "https://$artifact_s3_bucket_path.s3.amazonaws.com/index.html#clickhouse/$version/$CI_PIPELINE_ID/testflows/" raw.log - $confidential --copyright "Altinity Inc." --logo ./altinity.png | tfs --debug --no-colors document convert > report.html
#       - run: tfs --debug --no-colors report compare results --log compact.log --order-by version $confidential --copyright "Altinity Inc." --logo ./altinity.png | tfs --debug --no-colors document convert > compare.html
      - uses: actions/upload-artifact@v3
        with:
          name: example-artifact
          path: |
            ./report.html
            ./*.log.txt
            ./*.log
            ./*.html
            ./*/_instances/*/logs/*.log
            ./*/*/_instances/*/logs/*.log
            ./*/_instances/*.log
            ./*/*/_instances/*.log
