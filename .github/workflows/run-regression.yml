name: Run CI/CD regression tests
run-name: ${{ github.actor }} is running regression tests
on: 
  workflow_dispatch:
    inputs:
      package:
        description: "Package either 'docker://' or 'https://'. Example: 'https://s3.amazonaws.com/clickhouse-builds/23.3/.../package_release/clickhouse-common-static_23.3.1.64_amd64.deb', or 'docker://clickhouse/clickhouse-server'"
        required: true
        type: string
        default: docker://altinity/clickhouse-server
      version:
        description: "Expected version. Example: 23.3.1.64"
        required: true
        type: string
        default: 23.3.8.22.altinitystable
      suite:
        description: "Test suite to run (default: all)"
        type: choice
        options:
          - all
          - aes_encryption
          - aggregate_functions
          - atomic_insert
          - base_58
          - benchmark_all
          - benchmark_aws
          - benchmark_gcs
          - benchmark_minio
          - clickhouse_keeper
          - data_types
          - datetime64_extended_range
          - disk_level_encryption
          - dns
          - engines
          - example
          - extended_precision_data_types
          - kafka
          - kerberos
          - key_value
          - ldap
          - lightweight_delete
          - parquet
          - parquet_minio
          - parquet_s3
          - part_moves_between_shards
          - rbac
          - s3_all
          - s3_aws
          - s3_gcs
          - s3_minio
          - selects
          - session_timezone
          - ssl_server
          - tiered_storage_all
          - tiered_storage_aws
          - tiered_storage_gcs
          - tiered_storage_local
          - tiered_storage_minio
          - window_functions
      artifacts:
        description: "Artifact S3 bucket"
        type: choice
        options:
          - public
          - internal
      output_format:
        description: "Testflows output style."
        type: choice
        options:
          - classic
          - nice
          - new-fails
          - fails
          - slick
          - brisk
          - quiet
          - short
          - manual
          - dots
          - progress
          - raw
        

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_REPORT_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_REPORT_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_REPORT_REGION }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  PYTHONIOENCODING: utf-8
  REGRESSION_RESULTS_URL: clickhouse/${{ inputs.version }}/$GITHUB_RUN_ID/testflows
  clickhouse_binary_path: ${{ inputs.package }}
  version: ${{ inputs.version }}
  artifacts: ${{ inputs.artifacts }}
  args: --test-to-end
    --local
    --collect-service-logs 
    --output ${{ inputs.output_format }} 
    --parallel ${{ vars.PARALLEL }}
    --attr project="${GITHUB_REPOSITORY}" project.id="${GITHUB_REPOSITORY_ID}" user.name="${GITHUB_ACTOR}" version="${{ inputs.version }}" package="${{ inputs.package }}" repository="https://github.com/Altinity/clickhouse-regression" commit.hash="${GITHUB_SHA}" job.id="${GITHUB_RUN_ID}" job.url="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}" arch="$(uname -i)"
    --log raw.log
  artifact_paths: |
    ./report.html
    ./*.log.txt
    ./*.log
    ./*.html
    ./*/_instances/*.log
    ./*/_instances/*/logs/*.log
    ./*/*/_instances/*/logs/*.log
    ./*/*/_instances/*.log

jobs:
  aes_encryption:
    runs-on: [self-hosted, type-cpx21]
    timeout-minutes: 180
    env:
      SUITE: aes_encryption
    if: ${{ inputs.suite == 'all' || inputs.suite == 'aes_encryption' }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        run: .github/setup.sh

      - name: Run ${{ env.SUITE }} suite
        run: python3
              -u ${{ env.SUITE }}/regression.py
              --clickhouse-binary-path ${{ env.clickhouse_binary_path }}
              --clickhouse-version ${{ env.version }}
              ${{ env.args }}

      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh ${{ vars.UPLOAD_LOGS }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{ env.SUITE }}-artifacts
          path: ${{ env.artifact_paths}}

  aggregate_functions:
    runs-on: [self-hosted, type-cpx31]
    timeout-minutes: 180
    env:
      SUITE: aggregate_functions
    if: ${{ inputs.suite == 'all' || inputs.suite == 'aggregate_functions' }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        run: .github/setup.sh

      - name: Run ${{ env.SUITE }} suite
        run: python3
              -u ${{ env.SUITE }}/regression.py
              --clickhouse-binary-path ${{ env.clickhouse_binary_path }}
              --clickhouse-version ${{ env.version }}
              ${{ env.args }}

      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh ${{ vars.UPLOAD_LOGS }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{ env.SUITE }}-artifacts
          path: ${{ env.artifact_paths}}

  atomic_insert:
    runs-on: [self-hosted, type-cpx21]
    timeout-minutes: 180
    env:
      SUITE: atomic_insert
    if: ${{ inputs.suite == 'all' || inputs.suite == 'atomic_insert' }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        run: .github/setup.sh

      - name: Run ${{ env.SUITE }} suite
        run: python3
              -u ${{ env.SUITE }}/regression.py
              --clickhouse-binary-path ${{ env.clickhouse_binary_path }}
              --clickhouse-version ${{ env.version }}
              ${{ env.args }}

      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh ${{ vars.UPLOAD_LOGS }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{ env.SUITE }}-artifacts
          path: ${{ env.artifact_paths}}

  base_58:
    runs-on: [self-hosted, type-cpx21]
    timeout-minutes: 180
    env:
      SUITE: base_58
    if: ${{ inputs.suite == 'all' || inputs.suite == 'base_58' }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        run: .github/setup.sh

      - name: Run ${{ env.SUITE }} suite
        run: python3
              -u ${{ env.SUITE }}/regression.py
              --clickhouse-binary-path ${{ env.clickhouse_binary_path }}
              --clickhouse-version ${{ env.version }}
              ${{ env.args }}

      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh ${{ vars.UPLOAD_LOGS }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{ env.SUITE }}-artifacts
          path: ${{ env.artifact_paths}}

  benchmark_aws:
    runs-on: [self-hosted, type-cpx51]
    timeout-minutes: 180
    env:
      SUITE: ontime_benchmark
      STORAGE: /aws
    if: ${{ inputs.suite == 'all' || inputs.suite == 'benchmark_all' || inputs.suite == 'benchmark_aws' }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        run: .github/setup.sh

      - name: Run ${{ env.SUITE }} suite
        run: python3 
              -u ${{ env.SUITE }}/benchmark.py
              --storage aws_s3
              --aws-s3-bucket ${{ secrets.AWS_BUCKET }}
              --aws-s3-region ${{ secrets.AWS_REGION }}
              --aws-s3-key-id ${{ secrets.AWS_KEY_ID }}
              --aws-s3-access-key ${{ secrets.AWS_ACCESS_KEY }}
              --clickhouse-binary-path ${{ env.clickhouse_binary_path }}
              --clickhouse-version ${{ env.version }}
              ${{ env.args }}

      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh ${{ vars.UPLOAD_LOGS }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: benchmark-aws-artifacts
          path: ${{ env.artifact_paths}}  

  benchmark_gcs:
    runs-on: [self-hosted, type-cpx51]
    timeout-minutes: 180
    env:
      SUITE: ontime_benchmark
      STORAGE: /gcs
    if: ${{ inputs.suite == 'all' || inputs.suite == 'benchmark_all' || inputs.suite == 'benchmark_gcs' }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        run: .github/setup.sh

      - name: Run ${{ env.SUITE }} suite
        run: python3 
              -u ${{ env.SUITE }}/benchmark.py
              --storage gcs
              --gcs-uri ${{ secrets.GCS_URI }}
              --gcs-key-id ${{ secrets.GCS_KEY_ID }}
              --gcs-key-secret ${{ secrets.GCS_KEY_SECRET }}
              --clickhouse-binary-path ${{ env.clickhouse_binary_path }}
              --clickhouse-version ${{ env.version }}
              ${{ env.args }}

      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh ${{ vars.UPLOAD_LOGS }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: benchmark-gcs-artifacts
          path: ${{ env.artifact_paths}}

  benchmark_minio:
    runs-on: [self-hosted, type-cpx51]
    timeout-minutes: 180
    env:
      SUITE: ontime_benchmark
      STORAGE: /minio
    if: ${{ inputs.suite == 'all' || inputs.suite == 'benchmark_all' || inputs.suite == 'benchmark_minio' }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        run: .github/setup.sh

      - name: Run ${{ env.SUITE }} suite
        run: python3 
              -u ${{ env.SUITE }}/benchmark.py
              --storage minio
              --clickhouse-binary-path ${{ env.clickhouse_binary_path }}
              --clickhouse-version ${{ env.version }}
              ${{ env.args }}

      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh ${{ vars.UPLOAD_LOGS }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: benchmark-minio-artifacts
          path: ${{ env.artifact_paths}}

  clickhouse_keeper:
    runs-on: [self-hosted, type-cpx31]
    timeout-minutes: 180
    env:
      SUITE: clickhouse_keeper
      STORAGE: /no_ssl
    if: ${{ inputs.suite == 'all' || inputs.suite == 'clickhouse_keeper' }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        run: .github/setup.sh

      - name: Run ${{ env.SUITE }} suite
        run: python3
              -u ${{ env.SUITE }}/regression.py
              --clickhouse-binary-path ${{ env.clickhouse_binary_path }}
              --clickhouse-version ${{ env.version }}
              ${{ env.args }}

      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh ${{ vars.UPLOAD_LOGS }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{ env.SUITE }}-artifacts
          path: ${{ env.artifact_paths}}

  clickhouse_keeper_ssl:
    runs-on: [self-hosted, type-cpx31]
    timeout-minutes: 180
    env:
      SUITE: clickhouse_keeper
      STORAGE: /ssl
    if: ${{ inputs.suite == 'all' || inputs.suite == 'clickhouse_keeper' }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        run: .github/setup.sh

      - name: Run ${{ env.SUITE }} suite
        run: python3
              -u ${{ env.SUITE }}/regression.py
              --clickhouse-binary-path ${{ env.clickhouse_binary_path }}
              --clickhouse-version ${{ env.version }}
              --ssl
              ${{ env.args }}

      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh ${{ vars.UPLOAD_LOGS }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{ env.SUITE }}-artifacts
          path: ${{ env.artifact_paths}}

  data_types:
    runs-on: [self-hosted, type-cpx21]
    timeout-minutes: 180
    env:
      SUITE: data_types
    if: ${{ inputs.suite == 'all' || inputs.suite == 'data_types' }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        run: .github/setup.sh

      - name: Run ${{ env.SUITE }} suite
        run: python3
              -u ${{ env.SUITE }}/regression.py
              --clickhouse-binary-path ${{ env.clickhouse_binary_path }}
              --clickhouse-version ${{ env.version }}
              ${{ env.args }}

      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh ${{ vars.UPLOAD_LOGS }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{ env.SUITE }}-artifacts
          path: ${{ env.artifact_paths}}

  datetime64_extended_range:
    runs-on: [self-hosted, type-cpx31]
    timeout-minutes: 180
    env:
      SUITE: datetime64_extended_range
    if: ${{ inputs.suite == 'all' || inputs.suite == 'datetime64_extended_range' }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        run: .github/setup.sh

      - name: Run ${{ env.SUITE }} suite
        run: python3
              -u ${{ env.SUITE }}/regression.py
              --clickhouse-binary-path ${{ env.clickhouse_binary_path }}
              --clickhouse-version ${{ env.version }}
              ${{ env.args }}

      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh ${{ vars.UPLOAD_LOGS }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{ env.SUITE }}-artifacts
          path: ${{ env.artifact_paths}}

  disk_level_encryption:
    runs-on: [self-hosted, type-cpx31]
    timeout-minutes: 180
    env:
      SUITE: disk_level_encryption
    if: ${{ inputs.suite == 'all' || inputs.suite == 'disk_level_encryption' }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        run: .github/setup.sh

      - name: Run ${{ env.SUITE }} suite
        run: python3
              -u ${{ env.SUITE }}/regression.py
              --clickhouse-binary-path ${{ env.clickhouse_binary_path }}
              --clickhouse-version ${{ env.version }}
              ${{ env.args }}

      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh ${{ vars.UPLOAD_LOGS }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{ env.SUITE }}-artifacts
          path: ${{ env.artifact_paths}}

  dns:
    runs-on: [self-hosted, type-cpx21]
    timeout-minutes: 180
    env:
      SUITE: dns
    if: ${{ inputs.suite == 'all' || inputs.suite == 'dns' }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        run: .github/setup.sh

      - name: Run ${{ env.SUITE }} suite
        run: python3
              -u ${{ env.SUITE }}/regression.py
              --clickhouse-binary-path ${{ env.clickhouse_binary_path }}
              --clickhouse-version ${{ env.version }}
              ${{ env.args }}

      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh ${{ vars.UPLOAD_LOGS }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{ env.SUITE }}-artifacts
          path: ${{ env.artifact_paths}}

  engines:
    runs-on: [self-hosted, type-cpx21]
    timeout-minutes: 180
    env:
      SUITE: engines
    if: ${{ inputs.suite == 'all' || inputs.suite == 'engines' }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        run: .github/setup.sh

      - name: Run ${{ env.SUITE }} suite
        run: python3
              -u ${{ env.SUITE }}/regression.py
              --clickhouse-binary-path ${{ env.clickhouse_binary_path }}
              --clickhouse-version ${{ env.version }}
              ${{ env.args }}

      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh ${{ vars.UPLOAD_LOGS }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{ env.SUITE }}-artifacts
          path: ${{ env.artifact_paths}}

  example:
    runs-on: [self-hosted, type-cpx21]
    timeout-minutes: 180
    env:
      SUITE: example
    if: ${{ inputs.suite == 'all' || inputs.suite == 'example' }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        run: .github/setup.sh

      - name: Run ${{ env.SUITE }} suite
        run: python3
              -u ${{ env.SUITE }}/regression.py
              --clickhouse-binary-path ${{ env.clickhouse_binary_path }}
              --clickhouse-version ${{ env.version }}
              ${{ env.args }}

      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh ${{ vars.UPLOAD_LOGS }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{ env.SUITE }}-artifacts
          path: ${{ env.artifact_paths}}

  extended_precision_data_types:
    runs-on: [self-hosted, type-cpx21]
    timeout-minutes: 180
    env:
      SUITE: extended_precision_data_types
    if: ${{ inputs.suite == 'all' || inputs.suite == 'extended_precision_data_types' }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        run: .github/setup.sh

      - name: Run ${{ env.SUITE }} suite
        run: python3
              -u ${{ env.SUITE }}/regression.py
              --clickhouse-binary-path ${{ env.clickhouse_binary_path }}
              --clickhouse-version ${{ env.version }}
              ${{ env.args }}

      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh ${{ vars.UPLOAD_LOGS }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{ env.SUITE }}-artifacts
          path: ${{ env.artifact_paths}}

  # functional:
  #   runs-on: self-hosted
  #   env:
  #     SUITE: clickhouse/functional
  #   if: ${{ inputs.suite == 'all' || inputs.suite == 'functional' }}
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Setup
  #       run: .github/setup.sh

  #     - name: Run ${{ env.SUITE }} suite
  #       run: python3
  #             -u ${{ env.SUITE }}/functional.py
  #             --clickhouse-binary-path ${{ env.clickhouse_binary_path }}  
  #             --clickhouse-version ${{ env.version }} 
  #             ${{ env.args }}

  #     - name: Create and upload logs
  #       if: always()
  #       run: .github/create_and_upload_logs.sh ${{ vars.UPLOAD_LOGS }}

  #     - uses: actions/upload-artifact@v3
  #       if: always()
  #       with:
  #         name: clickhouse-functional-artifacts
  #         path: ${{ env.artifact_paths}}

  kafka:
    runs-on: [self-hosted, type-cpx21]
    timeout-minutes: 180
    env:
      SUITE: kafka
    if: ${{ inputs.suite == 'all' || inputs.suite == 'kafka' }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        run: .github/setup.sh

      - name: Run ${{ env.SUITE }} suite
        run: python3
              -u ${{ env.SUITE }}/regression.py
              --clickhouse-binary-path ${{ env.clickhouse_binary_path }}
              --clickhouse-version ${{ env.version }}
              ${{ env.args }}

      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh ${{ vars.UPLOAD_LOGS }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{ env.SUITE }}-artifacts
          path: ${{ env.artifact_paths}}

  kerberos:
    runs-on: [self-hosted, type-cpx21]
    timeout-minutes: 180
    env:
      SUITE: kerberos
    if: ${{ inputs.suite == 'all' || inputs.suite == 'kerberos' }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        run: .github/setup.sh

      - name: Run ${{ env.SUITE }} suite
        run: python3
              -u ${{ env.SUITE }}/regression.py
              --clickhouse-binary-path ${{ env.clickhouse_binary_path }}
              --clickhouse-version ${{ env.version }}
              ${{ env.args }}

      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh ${{ vars.UPLOAD_LOGS }}
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{ env.SUITE }}-artifacts
          path: ${{ env.artifact_paths}}

  key_value:
    runs-on: [self-hosted, type-cpx21]
    timeout-minutes: 180
    env:
      SUITE: key_value
    if: ${{ inputs.suite == 'all' || inputs.suite == 'key_value' }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        run: .github/setup.sh

      - name: Run ${{ env.SUITE }} suite
        run: python3
              -u ${{ env.SUITE }}/regression.py
              --clickhouse-binary-path ${{ env.clickhouse_binary_path }}
              --clickhouse-version ${{ env.version }}
              ${{ env.args }}

      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh ${{ vars.UPLOAD_LOGS }}
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{ env.SUITE }}-artifacts
          path: ${{ env.artifact_paths}}

  ldap_authentication:
    runs-on: [self-hosted, type-cpx21]
    timeout-minutes: 180
    env:
      SUITE: ldap/authentication
    if: ${{ inputs.suite == 'all' || inputs.suite == 'ldap' }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        run: .github/setup.sh

      - name: Run ${{ env.SUITE }} suite
        run: python3 
              -u ${{ env.SUITE }}/regression.py
              --clickhouse-binary-path ${{ env.clickhouse_binary_path }}
              --clickhouse-version ${{ env.version }}
              ${{ env.args }}

      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh ${{ vars.UPLOAD_LOGS }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ldap-authentication-artifacts
          path: ${{ env.artifact_paths}}

  ldap_external_user_directory:
    runs-on: [self-hosted, type-cpx21]
    timeout-minutes: 180
    env:
      SUITE: ldap/external_user_directory
    if: ${{ inputs.suite == 'all' || inputs.suite == 'ldap' }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        run: .github/setup.sh

      - name: Run ${{ env.SUITE }} suite
        run: python3 
              -u ${{ env.SUITE }}/regression.py
              --clickhouse-binary-path ${{ env.clickhouse_binary_path }}
              --clickhouse-version ${{ env.version }}
              ${{ env.args }}

      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh ${{ vars.UPLOAD_LOGS }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ldap-external_user_directory-artifacts
          path: ${{ env.artifact_paths}}

  ldap_role_mapping:
    runs-on: [self-hosted, type-cpx21]
    timeout-minutes: 180
    env:
      SUITE: ldap/role_mapping
    if: ${{ inputs.suite == 'all' || inputs.suite == 'ldap' }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        run: .github/setup.sh

      - name: Run ${{ env.SUITE }} suite
        run: python3
              -u ${{ env.SUITE }}/regression.py
              --clickhouse-binary-path ${{ env.clickhouse_binary_path }}
              --clickhouse-version ${{ env.version }}
              ${{ env.args }}

      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh ${{ vars.UPLOAD_LOGS }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ldap-role_mapping-artifacts
          path: ${{ env.artifact_paths}}

  lightweight_delete:
    runs-on: [self-hosted, type-cpx51]
    timeout-minutes: 180
    env:
      SUITE: lightweight_delete
    if: ${{ inputs.suite == 'all' || inputs.suite == 'lightweight_delete' }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        run: .github/setup.sh

      - name: Run ${{ env.SUITE }} suite
        run: python3 
              -u ${{ env.SUITE }}/regression.py
              --clickhouse-binary-path ${{ env.clickhouse_binary_path }}
              --clickhouse-version ${{ env.version }}
              ${{ env.args }}

      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh ${{ vars.UPLOAD_LOGS }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{ env.SUITE }}-artifacts
          path: ${{ env.artifact_paths}}

  parquet:
    runs-on: [self-hosted, type-cpx51]
    timeout-minutes: 180
    env:
      SUITE: parquet
      STORAGE: /no_s3
    if: ${{ inputs.suite == 'all' || inputs.suite == 'parquet' }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        run: .github/setup.sh

      - name: Run ${{ env.SUITE }} suite
        run: python3
              -u ${{ env.SUITE }}/regression.py
              --clickhouse-binary-path ${{ env.clickhouse_binary_path }}
              --clickhouse-version ${{ env.version }}
              ${{ env.args }}

      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh ${{ vars.UPLOAD_LOGS }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{ env.SUITE }}-artifacts
          path: ${{ env.artifact_paths}}

  parquet_minio:
    runs-on: [self-hosted, type-cpx31]
    timeout-minutes: 180
    env:
      SUITE: parquet
      STORAGE: /minio
    if: ${{ inputs.suite == 'all' || inputs.suite == 'parquet_minio' }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        run: .github/setup.sh

      - name: Run ${{ env.SUITE }} suite
        run: python3
              -u ${{ env.SUITE }}/regression.py
              --clickhouse-binary-path ${{ env.clickhouse_binary_path }}
              --clickhouse-version ${{ env.version }}
              --storage minio
              --only "/parquet/minio/*"
              ${{ env.args }}

      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh ${{ vars.UPLOAD_LOGS }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{ env.SUITE }}-minio-artifacts
          path: ${{ env.artifact_paths}}

  parquet_aws_s3:
    runs-on: [self-hosted, type-cpx51]
    timeout-minutes: 180
    env:
      SUITE: parquet
      STORAGE: /aws_s3
    if: ${{ inputs.suite == 'all' || inputs.suite == 'parquet_s3' }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        run: .github/setup.sh

      - name: Run ${{ env.SUITE }} suite
        run: python3
              -u ${{ env.SUITE }}/regression.py
              --clickhouse-binary-path ${{ env.clickhouse_binary_path }}
              --clickhouse-version ${{ env.version }}
              --storage aws_s3
              --aws-s3-bucket ${{ secrets.AWS_BUCKET }}
              --aws-s3-region ${{ secrets.AWS_REGION }}
              --aws-s3-key-id ${{ secrets.AWS_KEY_ID }}
              --aws-s3-access-key ${{ secrets.AWS_ACCESS_KEY }}
              --only "/parquet/aws s3/*"
              ${{ env.args }}

      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh ${{ vars.UPLOAD_LOGS }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{ env.SUITE }}-aws-artifacts
          path: ${{ env.artifact_paths}}

  part_moves_between_shards:
    runs-on: [self-hosted, type-cpx21]
    timeout-minutes: 180
    env:
      SUITE: part_moves_between_shards
    if: ${{ inputs.suite == 'all' || inputs.suite == 'part_moves_between_shards' }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        run: .github/setup.sh

      - name: Run ${{ env.SUITE }} suite
        run: python3
              -u ${{ env.SUITE }}/regression.py
              --clickhouse-binary-path ${{ env.clickhouse_binary_path }}
              --clickhouse-version ${{ env.version }}
              ${{ env.args }}

      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh ${{ vars.UPLOAD_LOGS }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{ env.SUITE }}-artifacts
          path: ${{ env.artifact_paths}}

  rbac:
    runs-on: [self-hosted, type-cpx31]
    timeout-minutes: 180
    env:
      SUITE: rbac
    if: ${{ inputs.suite == 'all' || inputs.suite == 'rbac' }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        run: .github/setup.sh

      - name: Run ${{ env.SUITE }} suite
        run: python3
              -u ${{ env.SUITE }}/regression.py
              --clickhouse-binary-path ${{ env.clickhouse_binary_path }}
              --clickhouse-version ${{ env.version }}
              ${{ env.args }}

      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh ${{ vars.UPLOAD_LOGS }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{ env.SUITE }}-artifacts
          path: ${{ env.artifact_paths}}

  s3_aws:
    runs-on: [self-hosted, type-cpx21]
    timeout-minutes: 180
    env:
      SUITE: s3
      STORAGE: /aws
    if: ${{ inputs.suite == 'all' || inputs.suite == 's3_all' || inputs.suite == 's3_aws' }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        run: .github/setup.sh

      - name: Run ${{ env.SUITE }} suite
        run: python3 
              -u ${{ env.SUITE }}/regression.py
              --storage aws_s3
              --aws-s3-bucket ${{ secrets.AWS_BUCKET }}
              --aws-s3-region ${{ secrets.AWS_REGION }}
              --aws-s3-key-id ${{ secrets.AWS_KEY_ID }}
              --aws-s3-access-key ${{ secrets.AWS_ACCESS_KEY }}
              --clickhouse-binary-path ${{ env.clickhouse_binary_path }}
              --clickhouse-version ${{ env.version }}
              ${{ env.args }}

      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh ${{ vars.UPLOAD_LOGS }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{ env.SUITE }}-aws-artifacts
          path: ${{ env.artifact_paths}}

  s3_gcs:
    runs-on: [self-hosted, type-cpx21]
    timeout-minutes: 180
    env:
      SUITE: s3
      STORAGE: /gcs
    if: ${{ inputs.suite == 'all' || inputs.suite == 's3_all' || inputs.suite == 's3_gcs' }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        run: .github/setup.sh

      - name: Run ${{ env.SUITE }} suite
        run: python3 
              -u ${{ env.SUITE }}/regression.py
              --storage gcs
              --gcs-uri ${{ secrets.GCS_URI }}
              --gcs-key-id ${{ secrets.GCS_KEY_ID }}
              --gcs-key-secret ${{ secrets.GCS_KEY_SECRET }}
              --clickhouse-binary-path ${{ env.clickhouse_binary_path }}
              --clickhouse-version ${{ env.version }}
              ${{ env.args }}

      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh ${{ vars.UPLOAD_LOGS }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{ env.SUITE }}-gcs-artifacts
          path: ${{ env.artifact_paths}}

  s3_minio:
    runs-on: [self-hosted, type-cpx21]
    timeout-minutes: 180
    env:
      SUITE: s3
      STORAGE: /minio
    if: ${{ inputs.suite == 'all' || inputs.suite == 's3_all' || inputs.suite == 's3_minio' }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        run: .github/setup.sh

      - name: Run ${{ env.SUITE }} suite
        run: python3 
              -u ${{ env.SUITE }}/regression.py
              --storage minio
              --clickhouse-binary-path ${{ env.clickhouse_binary_path }}
              --clickhouse-version ${{ env.version }}
              ${{ env.args }}

      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh ${{ vars.UPLOAD_LOGS }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{ env.SUITE }}-minio-artifacts
          path: ${{ env.artifact_paths}}

  selects:
    runs-on: [self-hosted, type-cpx21]
    timeout-minutes: 180
    env:
      SUITE: selects
    if: ${{ inputs.suite == 'all' || inputs.suite == 'selects' }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        run: .github/setup.sh

      - name: Run ${{ env.SUITE }} suite
        run: python3
              -u ${{ env.SUITE }}/regression.py
              --clickhouse-binary-path ${{ env.clickhouse_binary_path }}
              --clickhouse-version ${{ env.version }}
              ${{ env.args }}

      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh ${{ vars.UPLOAD_LOGS }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{ env.SUITE }}-artifacts
          path: ${{ env.artifact_paths}}
          
  session_timezone:
    runs-on: [self-hosted, type-cpx21]
    timeout-minutes: 180
    env:
      SUITE: session_timezone
    if: ${{ inputs.suite == 'all' || inputs.suite == 'session_timezone' }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        run: .github/setup.sh

      - name: Run ${{ env.SUITE }} suite
        run: python3
              -u ${{ env.SUITE }}/regression.py
              --clickhouse-binary-path ${{ env.clickhouse_binary_path }}
              --clickhouse-version ${{ env.version }}
              ${{ env.args }}

      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh ${{ vars.UPLOAD_LOGS }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{ env.SUITE }}-artifacts
          path: ${{ env.artifact_paths}}

  ssl_server:
    runs-on: [self-hosted, type-cpx21]
    timeout-minutes: 180
    env:
      SUITE: ssl_server
    if: ${{ inputs.suite == 'all' || inputs.suite == 'ssl_server' }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        run: .github/setup.sh

      - name: Run ${{ env.SUITE }} suite
        run: python3
              -u ${{ env.SUITE }}/regression.py
              --clickhouse-binary-path ${{ env.clickhouse_binary_path }}
              --clickhouse-version ${{ env.version }}
              ${{ env.args }}

      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh ${{ vars.UPLOAD_LOGS }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{ env.SUITE }}-artifacts
          path: ${{ env.artifact_paths}}

  tiered_storage_aws:
    runs-on: [self-hosted, type-cpx21]
    timeout-minutes: 180
    env:
      SUITE: tiered_storage
      STORAGE: /aws
    if: ${{ inputs.suite == 'all' || inputs.suite == 'tiered_storage_aws' || inputs.suite == 'tiered_storage_all' }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        run: .github/setup.sh

      - name: Run ${{ env.SUITE }} suite
        run: python3 
              -u ${{ env.SUITE }}/regression.py
              --with-s3amazon
              --aws-s3-access-key ${{ secrets.AWS_ACCESS_KEY }}
              --aws-s3-key-id ${{ secrets.AWS_KEY_ID }}
              --aws-s3-uri https://s3.${{ secrets.AWS_REGION}}.amazonaws.com/${{ secrets.AWS_BUCKET }}/data/
              --clickhouse-binary-path ${{ env.clickhouse_binary_path }}
              --clickhouse-version ${{ env.version }}
              ${{ env.args }}

      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh ${{ vars.UPLOAD_LOGS }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{ env.SUITE }}-aws-artifacts
          path: ${{ env.artifact_paths}}

  tiered_storage_gcs:
    runs-on: [self-hosted, type-cpx21]
    timeout-minutes: 180
    env:
      SUITE: tiered_storage
      STORAGE: /gcs
    if: ${{ inputs.suite == 'all' || inputs.suite == 'tiered_storage_gcs' || inputs.suite == 'tiered_storage_all' }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        run: .github/setup.sh

      - name: Run ${{ env.SUITE }} suite
        run: python3 
              -u ${{ env.SUITE }}/regression.py
              --with-s3gcs 
              --gcs-uri ${{ secrets.GCS_URI }}
              --gcs-key-id ${{ secrets.GCS_KEY_ID }}
              --gcs-key-secret ${{ secrets.GCS_KEY_SECRET }}
              --clickhouse-binary-path ${{ env.clickhouse_binary_path }}
              --clickhouse-version ${{ env.version }}
              ${{ env.args }}

      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh ${{ vars.UPLOAD_LOGS }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{ env.SUITE }}-gcs-artifacts
          path: ${{ env.artifact_paths}}

  tiered_storage_local:
    runs-on: [self-hosted, type-cpx21]
    timeout-minutes: 180
    env:
      SUITE: tiered_storage
    if: ${{ inputs.suite == 'all' || inputs.suite == 'tiered_storage_local' || inputs.suite == 'tiered_storage_all' }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        run: .github/setup.sh

      - name: Run ${{ env.SUITE }} suite
        run: python3 
              -u ${{ env.SUITE }}/regression.py
              --clickhouse-binary-path ${{ env.clickhouse_binary_path }}
              --clickhouse-version ${{ env.version }}
              ${{ env.args }}

      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh ${{ vars.UPLOAD_LOGS }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{ env.SUITE }}-artifacts
          path: ${{ env.artifact_paths}}

  tiered_storage_minio:
    runs-on: [self-hosted, type-cpx21]
    timeout-minutes: 180
    env:
      SUITE: tiered_storage
      STORAGE: /minio
    if: ${{ inputs.suite == 'all' || inputs.suite == 'tiered_storage_minio' || inputs.suite == 'tiered_storage_all' }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        run: .github/setup.sh

      - name: Run ${{ env.SUITE }} suite
        run: python3 
              -u ${{ env.SUITE }}/regression.py
              --with-minio
              --clickhouse-binary-path ${{ env.clickhouse_binary_path }}
              --clickhouse-version ${{ env.version }}
              ${{ env.args }}

      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh ${{ vars.UPLOAD_LOGS }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{ env.SUITE }}-minio-artifacts
          path: ${{ env.artifact_paths}}


  window_functions:
    runs-on: [self-hosted, type-cpx21]
    timeout-minutes: 180
    env:
      SUITE: window_functions
    if: ${{ inputs.suite == 'all' || inputs.suite == 'window_functions' }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        run: .github/setup.sh

      - name: Run ${{ env.SUITE }} suite
        run: python3
              -u ${{ env.SUITE }}/regression.py
              --clickhouse-binary-path ${{ env.clickhouse_binary_path }}
              --clickhouse-version ${{ env.version }}
              ${{ env.args }}

      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh ${{ vars.UPLOAD_LOGS }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{ env.SUITE }}-artifacts
          path: ${{ env.artifact_paths}}
