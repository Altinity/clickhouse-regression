name: Reusable Test Suite

on:
  workflow_call:
    inputs:
      package:
        description: "Package to test"
        required: true
        type: string
      version:
        description: "Expected version"
        type: string
      suite:
        type: string
        description: "Test suite to run."
        default: all
      output_format:
        description: "Testflows output style."
        type: string
      ref:
        description: "Commit SHA to checkout. Default: current (empty string)."
        type: string
      extra_args:
        description: "Extra test program arguments. Default: none (empty string)."
        type: string
      artifact_name:
        description: "Artifact name."
        type: string
      runner_type:
        description: "Runner to use."
        type: string
        default: "type-cpx41"
      timeout:
        description: "Timeout in minutes."
        type: number
        default: 120

env:
  args: --test-to-end
    --no-colors
    --local
    --clickhouse ${{ inputs.package }}
    ${{ inputs.version != '' && format('--clickhouse-version {0}', inputs.version) || '' }}
    --collect-service-logs
    --output ${{ inputs.output_format }}
    --parallel ${{ vars.PARALLEL }}
    --attr project="${GITHUB_REPOSITORY}" project.id="${GITHUB_REPOSITORY_ID}" user.name="${GITHUB_ACTOR}" version="${{ inputs.version }}" package="${{ inputs.package }}" repository="https://github.com/Altinity/clickhouse-regression" commit.hash="${GITHUB_SHA}" job.id="${GITHUB_RUN_ID}" job.url="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}" arch="$(uname -i)" report.url=$SUITE_REPORT_INDEX_URL job.is_scheduled="${{ github.event_name == 'schedule' }}"
    --log raw.log ${{ inputs.extra_args }}
  artifact_paths: |
    ./report.html
    ./*.log.txt
    ./*.log
    ./*.html
    ./*/_instances/*.log
    ./*/_instances/*/logs/*.log
    ./*/*/_instances/*/logs/*.log
    ./*/*/_instances/*.log

jobs:
  test_suite:
    runs-on: [self-hosted, x86, "${{inputs.runner_type}}", image-x86-app-docker-ce]
    timeout-minutes: ${{ inputs.timeout }}
    steps:
     - name: ‚§µÔ∏è Checkout
       uses: actions/checkout@v4
       with:
         ref: ${{ inputs.ref }}

     - name: üõ†Ô∏è Setup
       run: .github/setup.sh

     - name: üß™ Run ${{ inputs.suite }} suite
       run: EXITCODE=0;
          python3 -u ${{ inputs.suite }}/regression.py
          ${{ env.args }} || EXITCODE=$?; 
          .github/add_link_to_logs.sh; 
          exit $EXITCODE

     - name: üìù Create and upload logs
       if: always()
       run: .github/create_and_upload_logs.sh ${{ vars.UPLOAD_LOGS }}

     - uses: actions/upload-artifact@v4
       if: always()
       with:
         name: ${{ inputs.artifact_name }}
         path: ${{ env.artifact_paths }}
