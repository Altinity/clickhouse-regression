name: Reusable Workflow for Scheduled ARM

on:
  workflow_call:
    inputs:
      package:
        description: "Package either 'docker://' or 'https://'. Example: 'https://s3.amazonaws.com/clickhouse-builds/23.3/.../package_release/clickhouse-common-static_23.3.1.64_amd64.deb', or 'docker://altinity/clickhouse-server:23.8.8'"
        required: true
        type: string
        default: docker://altinity/clickhouse-server:24.3.5.48.altinitytest
      version:
        description: "Expected version. Example: 23.3.1.64"
        type: string
      suite:
        type: string
        description: "Test suite to run. Default: all"
        default: all
      artifacts:
        description: "Artifact S3 bucket"
        type: string
        default: public
      output_format:
        description: "Testflows output style."
        type: string
        default: new-fails
      ref:
        description: "Commit SHA to checkout. Default: current (empty string)."
        type: string
        default: ""
      extra_args:
        description: "Extra test program arguments. Default: none (empty string)."
        type: string
        default: ""
      artifact_name:
        description: "Artifact name. Default: artifacts"
        type: string
    secrets:
      AWS_REPORT_KEY_ID:
        required: true
      AWS_REPORT_SECRET_ACCESS_KEY:
        required: true
      AWS_REPORT_REGION:
        required: true
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true
      CHECKS_DATABASE_HOST:
        required: true
      CHECKS_DATABASE_USER:
        required: true
      CHECKS_DATABASE_PASSWORD:
        required: true

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_REPORT_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_REPORT_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_REPORT_REGION }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  CHECKS_DATABASE_HOST: ${{ secrets.CHECKS_DATABASE_HOST }}
  CHECKS_DATABASE_USER: ${{ secrets.CHECKS_DATABASE_USER }}
  CHECKS_DATABASE_PASSWORD: ${{ secrets.CHECKS_DATABASE_PASSWORD }}
  PYTHONIOENCODING: utf-8
  clickhouse_path: ${{ inputs.package }}
  version: ${{ inputs.version }}
  artifacts: ${{ inputs.artifacts }}
  args: --test-to-end
    --no-colors
    --local
    --clickhouse ${{ inputs.package }}
    ${{ inputs.version != '' && format('--clickhouse-version {0}', inputs.version) || '' }}
    --collect-service-logs
    --output ${{ inputs.output_format }}
    --parallel ${{ vars.PARALLEL }}
    --attr project="${GITHUB_REPOSITORY}" project.id="${GITHUB_REPOSITORY_ID}" user.name="${GITHUB_ACTOR}" version="${{ inputs.version }}" package="${{ inputs.package }}" repository="https://github.com/Altinity/clickhouse-regression" commit.hash="${GITHUB_SHA}" job.id="${GITHUB_RUN_ID}" job.url="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}" arch="$(uname -i)" report.url=$SUITE_REPORT_INDEX_URL job.is_scheduled="${{ github.event_name == 'schedule' }}"
    --log raw.log ${{ inputs.extra_args }}
  artifact_paths: |
    ./report.html
    ./*.log.txt
    ./*.log
    ./*.html
    ./*/_instances/*.log
    ./*/_instances/*/logs/*.log
    ./*/*/_instances/*/logs/*.log
    ./*/*/_instances/*.log
  ACTIONS_RUNNER_DEBUG: true

jobs:
  aes_encryption:
    if: ${{ inputs.suite == 'all' || inputs.suite == 'aes_encryption' }}
    uses: ./.github/workflows/reusable-suite-arm.yml
    secrets: inherit
    with:
      name: aes_encryption
      suite: aes_encryption
      runner_type: type-cax41
      timeout: 180
      extra_args: ${{ inputs.extra_args }}
      package: ${{ inputs.package }}
      version: ${{ inputs.version }}
      ref: ${{ inputs.ref }}
      output_format: ${{ inputs.output_format }}
      artifact_bucket: ${{ inputs.artifacts }}
      artifact_name: ${{ inputs.artifact_name }}

  aggregate_functions:
    if: ${{ inputs.suite == 'all' || inputs.suite == 'aggregate_functions' }}
    uses: ./.github/workflows/reusable-suite-arm.yml
    secrets: inherit
    with:
      name: aggregate_functions
      suite: aggregate_functions
      runner_type: type-cax51
      timeout: 360
      extra_args: ${{ inputs.extra_args }}
      package: ${{ inputs.package }}
      version: ${{ inputs.version }}
      ref: ${{ inputs.ref }}
      output_format: ${{ inputs.output_format }}
      artifact_bucket: ${{ inputs.artifacts }}
      artifact_name: ${{ inputs.artifact_name }}

  atomic_insert:
    if: ${{ inputs.suite == 'all' || inputs.suite == 'atomic_insert' }}
    uses: ./.github/workflows/reusable-suite-arm.yml
    secrets: inherit
    with:
      name: atomic_insert
      suite: atomic_insert
      runner_type: type-cax41
      timeout: 180
      extra_args: ${{ inputs.extra_args }}
      package: ${{ inputs.package }}
      version: ${{ inputs.version }}
      ref: ${{ inputs.ref }}
      output_format: ${{ inputs.output_format }}
      artifact_bucket: ${{ inputs.artifacts }}
      artifact_name: ${{ inputs.artifact_name }}

  alter_replace_partition:
    if: ${{ inputs.suite == 'all' || inputs.suite == 'alter_all' || inputs.suite == 'alter_replace_partition' }}
    uses: ./.github/workflows/reusable-suite-arm.yml
    secrets: inherit
    with:
      name: alter_replace_partition
      suite: alter_replace_partition
      runner_type: type-cax51
      timeout: 300
      extra_args: ${{ inputs.extra_args }} --only "/alter/replace partition/*"
      package: ${{ inputs.package }}
      version: ${{ inputs.version }}
      ref: ${{ inputs.ref }}
      output_format: ${{ inputs.output_format }}
      artifact_bucket: ${{ inputs.artifacts }}
      artifact_name: ${{ inputs.artifact_name }}
    
  alter_attach_partition:
    if: ${{ inputs.suite == 'all' || inputs.suite == 'alter_all' || inputs.suite == 'alter_attach_partition' }}
    uses: ./.github/workflows/reusable-suite-arm.yml
    secrets: inherit
    with:
      name: alter_attach_partition
      suite: alter_attach_partition
      runner_type: type-cax51
      timeout: 3000
      extra_args: ${{ inputs.extra_args }} --only "/alter/attach partition/*"
      package: ${{ inputs.package }}
      version: ${{ inputs.version }}
      ref: ${{ inputs.ref }}
      output_format: ${{ inputs.output_format }}
      artifact_bucket: ${{ inputs.artifacts }}
      artifact_name: ${{ inputs.artifact_name }}


  alter_move_partition:
    if: ${{ inputs.suite == 'all' || inputs.suite == 'alter_all' || inputs.suite == 'alter_move_partition' }}
    uses: ./.github/workflows/reusable-suite-arm.yml
    secrets: inherit
    with:
      name: alter_move_partition
      suite: alter_move_partition
      runner_type: type-cax41
      timeout: 3000
      extra_args: ${{ inputs.extra_args }} --only "/alter/move partition/*"
      package: ${{ inputs.package }}
      version: ${{ inputs.version }}
      ref: ${{ inputs.ref }}
      output_format: ${{ inputs.output_format }}
      artifact_bucket: ${{ inputs.artifacts }}
      artifact_name: ${{ inputs.artifact_name }}

  attach:
    if: ${{ inputs.suite == 'all' || inputs.suite == 'attach' }}
    uses: ./.github/workflows/reusable-suite-arm.yml
    secrets: inherit
    with:
      name: attach
      suite: attach
      runner_type: type-cax41
      timeout: 3000
      extra_args: ${{ inputs.extra_args }} --only "/attach/*"
      package: ${{ inputs.package }}
      version: ${{ inputs.version }}
      ref: ${{ inputs.ref }}
      output_format: ${{ inputs.output_format }}
      artifact_bucket: ${{ inputs.artifacts }}
      artifact_name: ${{ inputs.artifact_name }}

  base_58:
    if: ${{ inputs.suite == 'all' || inputs.suite == 'base_58' }}
    uses: ./.github/workflows/reusable-suite-arm.yml
    secrets: inherit
    with:
      name: base_58
      suite: base_58
      runner_type: type-cax41
      timeout: 180
      extra_args: ${{ inputs.extra_args }}
      package: ${{ inputs.package }}
      version: ${{ inputs.version }}
      ref: ${{ inputs.ref }}
      output_format: ${{ inputs.output_format }}
      artifact_bucket: ${{ inputs.artifacts }}
      artifact_name: ${{ inputs.artifact_name }}

  benchmark_minio:
    if: ${{ inputs.suite == 'all' || inputs.suite == 'benchmark_all' || inputs.suite == 'benchmark_minio' }}
    uses: ./.github/workflows/reusable-suite-arm.yml
    secrets: inherit
    with:
      name: benchmark_minio
      suite: benchmark_minio
      runner_type: type-cax51
      timeout: 180
      extra_args: ${{ inputs.extra_args }} --storage minio
      package: ${{ inputs.package }}
      version: ${{ inputs.version }}
      ref: ${{ inputs.ref }}
      output_format: ${{ inputs.output_format }}
      artifact_bucket: ${{ inputs.artifacts }}
      artifact_name: ${{ inputs.artifact_name }}

  clickhouse_keeper:
    if: ${{ inputs.suite == 'all' || inputs.suite == 'clickhouse_keeper' }}
    uses: ./.github/workflows/reusable-suite-arm.yml
    secrets: inherit
    with:
      name: clickhouse_keeper
      suite: clickhouse_keeper
      runner_type: type-cax41
      timeout: 180
      extra_args: ${{ inputs.extra_args }}
      package: ${{ inputs.package }}
      version: ${{ inputs.version }}
      ref: ${{ inputs.ref }}
      output_format: ${{ inputs.output_format }}
      artifact_bucket: ${{ inputs.artifacts }}
      artifact_name: ${{ inputs.artifact_name }}

  clickhouse_keeper_ssl:
    if: ${{ inputs.suite == 'all' || inputs.suite == 'clickhouse_keeper' }}
    uses: ./.github/workflows/reusable-suite-arm.yml
    secrets: inherit
    with:
      name: clickhouse_keeper_ssl
      suite: clickhouse_keeper
      runner_type: type-cax41
      timeout: 180
      extra_args: ${{ inputs.extra_args }} --ssl
      package: ${{ inputs.package }}
      version: ${{ inputs.version }}
      ref: ${{ inputs.ref }}
      output_format: ${{ inputs.output_format }}
      artifact_bucket: ${{ inputs.artifacts }}
      artifact_name: ${{ inputs.artifact_name }}

  clickhouse_keeper_failover:
    if: ${{ inputs.suite == 'all' || inputs.suite == 'clickhouse_keeper_failover' }}
    uses: ./.github/workflows/reusable-suite-arm.yml
    secrets: inherit
    with:
      name: clickhouse_keeper_failover
      suite: clickhouse_keeper_failover
      runner_type: type-cax41
      timeout: 180
      extra_args: ${{ inputs.extra_args }}
      package: ${{ inputs.package }}
      version: ${{ inputs.version }}
      ref: ${{ inputs.ref }}
      output_format: ${{ inputs.output_format }}
      artifact_bucket: ${{ inputs.artifacts }}
      artifact_name: ${{ inputs.artifact_name }}

  data_types:
    if: ${{ inputs.suite == 'all' || inputs.suite == 'data_types' }}
    uses: ./.github/workflows/reusable-suite-arm.yml
    secrets: inherit
    with:
      name: data_types
      suite: data_types
      runner_type: type-cax41
      timeout: 180
      extra_args: ${{ inputs.extra_args }}
      package: ${{ inputs.package }}
      version: ${{ inputs.version }}
      ref: ${{ inputs.ref }}
      output_format: ${{ inputs.output_format }}
      artifact_bucket: ${{ inputs.artifacts }}
      artifact_name: ${{ inputs.artifact_name }}

  datetime64_extended_range:
    if: ${{ inputs.suite == 'all' || inputs.suite == 'datetime64_extended_range' }}
    uses: ./.github/workflows/reusable-suite-arm.yml
    secrets: inherit
    with:
      name: datetime64_extended_range
      suite: datetime64_extended_range
      runner_type: type-cax41
      timeout: 180
      extra_args: ${{ inputs.extra_args }}
      package: ${{ inputs.package }}
      version: ${{ inputs.version }}
      ref: ${{ inputs.ref }}
      output_format: ${{ inputs.output_format }}
      artifact_bucket: ${{ inputs.artifacts }}
      artifact_name: ${{ inputs.artifact_name }}

  disk_level_encryption:
    if: ${{ inputs.suite == 'all' || inputs.suite == 'disk_level_encryption' }}
    uses: ./.github/workflows/reusable-suite-arm.yml
    secrets: inherit
    with:
      name: disk_level_encryption
      suite: disk_level_encryption
      runner_type: type-cax41
      timeout: 240
      extra_args: ${{ inputs.extra_args }}
      package: ${{ inputs.package }}
      version: ${{ inputs.version }}
      ref: ${{ inputs.ref }}
      output_format: ${{ inputs.output_format }}
      artifact_bucket: ${{ inputs.artifacts }}
      artifact_name: ${{ inputs.artifact_name }}

  dns:
    if: ${{ inputs.suite == 'all' || inputs.suite == 'dns' }}
    uses: ./.github/workflows/reusable-suite-arm.yml
    secrets: inherit
    with:
      name: dns
      suite: dns
      runner_type: type-cax41
      timeout: 180
      extra_args: ${{ inputs.extra_args }}
      package: ${{ inputs.package }}
      version: ${{ inputs.version }}
      ref: ${{ inputs.ref }}
      output_format: ${{ inputs.output_format }}
      artifact_bucket: ${{ inputs.artifacts }}
      artifact_name: ${{ inputs.artifact_name }}

  engines:
    if: ${{ inputs.suite == 'all' || inputs.suite == 'engines' }}
    uses: ./.github/workflows/reusable-suite-arm.yml
    secrets: inherit
    with:
      name: engines
      suite: engines
      runner_type: type-cax41
      timeout: 180
      extra_args: ${{ inputs.extra_args }}
      package: ${{ inputs.package }}
      version: ${{ inputs.version }}
      ref: ${{ inputs.ref }}
      output_format: ${{ inputs.output_format }}
      artifact_bucket: ${{ inputs.artifacts }}
      artifact_name: ${{ inputs.artifact_name }}
  
  example:
    if: ${{ inputs.suite == 'all' || inputs.suite == 'example' }}
    uses: ./.github/workflows/reusable-suite-arm.yml
    secrets: inherit
    with:
      name: example
      suite: example
      runner_type: type-cax41
      timeout: 180
      extra_args: ${{ inputs.extra_args }}
      package: ${{ inputs.package }}
      version: ${{ inputs.version }}
      ref: ${{ inputs.ref }}
      output_format: ${{ inputs.output_format }}
      artifact_bucket: ${{ inputs.artifacts }}
      artifact_name: ${{ inputs.artifact_name }}

  extended_precision_data_types:
    if: ${{ inputs.suite == 'all' || inputs.suite == 'extended_precision_data_types' }}
    uses: ./.github/workflows/reusable-suite-arm.yml
    secrets: inherit
    with:
      name: extended_precision_data_types
      suite: extended_precision_data_types
      runner_type: type-cax41
      timeout: 180
      extra_args: ${{ inputs.extra_args }}
      package: ${{ inputs.package }}
      version: ${{ inputs.version }}
      ref: ${{ inputs.ref }}
      output_format: ${{ inputs.output_format }}
      artifact_bucket: ${{ inputs.artifacts }}
      artifact_name: ${{ inputs.artifact_name }}

  functions:
    if: ${{ inputs.suite == 'all' || inputs.suite == 'functions' }}
    uses: ./.github/workflows/reusable-suite-arm.yml
    secrets: inherit
    with:
      name: functions
      suite: functions
      runner_type: type-cax41
      timeout: 180
      extra_args: ${{ inputs.extra_args }}
      package: ${{ inputs.package }}
      version: ${{ inputs.version }}
      ref: ${{ inputs.ref }}
      output_format: ${{ inputs.output_format }}
      artifact_bucket: ${{ inputs.artifacts }}
      artifact_name: ${{ inputs.artifact_name }}
    
  jwt_authentication:
    if: ${{ inputs.suite == 'all' || inputs.suite == 'jwt_authentication' }}
    uses: ./.github/workflows/reusable-suite-arm.yml
    secrets: inherit
    with:
      name: jwt_authentication
      suite: jwt_authentication
      runner_type: type-cax41
      timeout: 180
      extra_args: ${{ inputs.extra_args }}
      package: ${{ inputs.package }}
      version: ${{ inputs.version }}
      ref: ${{ inputs.ref }}
      output_format: ${{ inputs.output_format }}
      artifact_bucket: ${{ inputs.artifacts }}
      artifact_name: ${{ inputs.artifact_name }}

  kafka:
    if: ${{ inputs.suite == 'all' || inputs.suite == 'kafka' }}
    uses: ./.github/workflows/reusable-suite-arm.yml
    secrets: inherit
    with:
      name: kafka
      suite: kafka
      runner_type: type-cax41
      timeout: 180
      extra_args: ${{ inputs.extra_args }}
      package: ${{ inputs.package }}
      version: ${{ inputs.version }}
      ref: ${{ inputs.ref }}
      output_format: ${{ inputs.output_format }}
      artifact_bucket: ${{ inputs.artifacts }}
      artifact_name: ${{ inputs.artifact_name }}

  kerberos:
    if: ${{ inputs.suite == 'all' || inputs.suite == 'kerberos' }}
    uses: ./.github/workflows/reusable-suite-arm.yml
    secrets: inherit
    with:
      name: kerberos
      suite: kerberos
      runner_type: type-cax41
      timeout: 180
      extra_args: ${{ inputs.extra_args }}
      package: ${{ inputs.package }}
      version: ${{ inputs.version }}
      ref: ${{ inputs.ref }}
      output_format: ${{ inputs.output_format }}
      artifact_bucket: ${{ inputs.artifacts }}
      artifact_name: ${{ inputs.artifact_name }}

  key_value:
    if: ${{ inputs.suite == 'all' || inputs.suite == 'key_value' }}
    uses: ./.github/workflows/reusable-suite-arm.yml
    secrets: inherit
    with:
      name: key_value
      suite: key_value
      runner_type: type-cax41
      timeout: 180
      extra_args: ${{ inputs.extra_args }}
      package: ${{ inputs.package }}
      version: ${{ inputs.version }}
      ref: ${{ inputs.ref }}
      output_format: ${{ inputs.output_format }}
      artifact_bucket: ${{ inputs.artifacts }}
      artifact_name: ${{ inputs.artifact_name }}

  ldap_authentication:
    if: ${{ inputs.suite == 'all' || inputs.suite == 'ldap' }}
    uses: ./.github/workflows/reusable-suite-arm.yml
    secrets: inherit
    with:
      name: ldap_authentication
      suite: ldap/authentication
      runner_type: type-cax41
      timeout: 180
      extra_args: ${{ inputs.extra_args }}
      package: ${{ inputs.package }}
      version: ${{ inputs.version }}
      ref: ${{ inputs.ref }}
      output_format: ${{ inputs.output_format }}
      artifact_bucket: ${{ inputs.artifacts }}
      artifact_name: ${{ inputs.artifact_name }}

  ldap_external_user_directory:
    if: ${{ inputs.suite == 'all' || inputs.suite == 'ldap' }}
    uses: ./.github/workflows/reusable-suite-arm.yml
    secrets: inherit
    with:
      name: ldap_external_user_directory
      suite: ldap/external_user_directory
      runner_type: type-cax41
      timeout: 180
      extra_args: ${{ inputs.extra_args }}
      package: ${{ inputs.package }}
      version: ${{ inputs.version }}
      ref: ${{ inputs.ref }}
      output_format: ${{ inputs.output_format }}
      artifact_bucket: ${{ inputs.artifacts }}
      artifact_name: ${{ inputs.artifact_name }}

  ldap_role_mapping:
    if: ${{ inputs.suite == 'all' || inputs.suite == 'ldap' }}
    uses: ./.github/workflows/reusable-suite-arm.yml
    secrets: inherit
    with:
      name: ldap_role_mapping
      suite: ldap/role_mapping
      runner_type: type-cax41
      timeout: 180
      extra_args: ${{ inputs.extra_args }}
      package: ${{ inputs.package }}
      version: ${{ inputs.version }}
      ref: ${{ inputs.ref }}
      output_format: ${{ inputs.output_format }}
      artifact_bucket: ${{ inputs.artifacts }}
      artifact_name: ${{ inputs.artifact_name }}

  lightweight_delete:
    if: ${{ inputs.suite == 'all' || inputs.suite == 'lightweight_delete' }}
    uses: ./.github/workflows/reusable-suite-arm.yml
    secrets: inherit
    with:
      name: lightweight_delete
      suite: lightweight_delete
      runner_type: type-cax51
      timeout: 180
      extra_args: ${{ inputs.extra_args }}
      package: ${{ inputs.package }}
      version: ${{ inputs.version }}
      ref: ${{ inputs.ref }}
      output_format: ${{ inputs.output_format }}
      artifact_bucket: ${{ inputs.artifacts }}
      artifact_name: ${{ inputs.artifact_name }}

  memory:
    if: ${{ inputs.suite == 'all' || inputs.suite == 'memory' }}
    uses: ./.github/workflows/reusable-suite-arm.yml
    secrets: inherit
    with:
      name: memory
      suite: memory
      runner_type: type-cax51
      timeout: 1800
      extra_args: ${{ inputs.extra_args }}
      package: ${{ inputs.package }}
      version: ${{ inputs.version }}
      ref: ${{ inputs.ref }}
      output_format: ${{ inputs.output_format }}
      artifact_bucket: ${{ inputs.artifacts }}
      artifact_name: ${{ inputs.artifact_name }}

  parquet:
    if: ${{ inputs.suite == 'all' || inputs.suite == 'parquet' || inputs.suite == 'parquet_all'}}
    uses: ./.github/workflows/reusable-suite-arm.yml
    secrets: inherit
    with:
      name: parquet
      suite: parquet
      runner_type: type-cax51
      timeout: 180
      extra_args: ${{ inputs.extra_args }}
      package: ${{ inputs.package }}
      version: ${{ inputs.version }}
      ref: ${{ inputs.ref }}
      output_format: ${{ inputs.output_format }}
      artifact_bucket: ${{ inputs.artifacts }}
      artifact_name: ${{ inputs.artifact_name }}

  parquet_minio:
    if: ${{ inputs.suite == 'all' || inputs.suite == 'parquet_minio' || inputs.suite == 'parquet_all'}}
    uses: ./.github/workflows/reusable-suite-arm.yml
    secrets: inherit
    with:
      name: parquet_minio
      suite: parquet
      runner_type: type-cax41
      timeout: 300
      extra_args: ${{ inputs.extra_args }} --storage minio --only "/parquet/minio/*"
      package: ${{ inputs.package }}
      version: ${{ inputs.version }}
      ref: ${{ inputs.ref }}
      output_format: ${{ inputs.output_format }}
      artifact_bucket: ${{ inputs.artifacts }}
      artifact_name: ${{ inputs.artifact_name }}

  part_moves_between_shards:
    if: ${{ inputs.suite == 'all' || inputs.suite == 'part_moves_between_shards' }}
    uses: ./.github/workflows/reusable-suite-arm.yml
    secrets: inherit
    with:
      name: part_moves_between_shards
      suite: part_moves_between_shards
      runner_type: type-cax41
      timeout: 180
      extra_args: ${{ inputs.extra_args }}
      package: ${{ inputs.package }}
      version: ${{ inputs.version }}
      ref: ${{ inputs.ref }}
      output_format: ${{ inputs.output_format }}
      artifact_bucket: ${{ inputs.artifacts }}
      artifact_name: ${{ inputs.artifact_name }}

  rbac:
    if: ${{ inputs.suite == 'all' || inputs.suite == 'rbac' }}
    uses: ./.github/workflows/reusable-suite-arm.yml
    secrets: inherit
    with:
      name: rbac
      suite: rbac
      runner_type: type-cax41
      timeout: 540
      extra_args: ${{ inputs.extra_args }}
      package: ${{ inputs.package }}
      version: ${{ inputs.version }}
      ref: ${{ inputs.ref }}
      output_format: ${{ inputs.output_format }}
      artifact_bucket: ${{ inputs.artifacts }}
      artifact_name: ${{ inputs.artifact_name }}

  s3_minio:
    if: ${{ inputs.suite == 'all' || inputs.suite == 's3_all' || inputs.suite == 's3_minio' }}
    uses: ./.github/workflows/reusable-suite-arm.yml
    secrets: inherit
    with:
      name: s3_minio
      suite: s3
      runner_type: type-cax51
      timeout: 180
      extra_args: ${{ inputs.extra_args }} --storage minio
      package: ${{ inputs.package }}
      version: ${{ inputs.version }}
      ref: ${{ inputs.ref }}
      output_format: ${{ inputs.output_format }}
      artifact_bucket: ${{ inputs.artifacts }}
      artifact_name: ${{ inputs.artifact_name }}

  selects:
    if: ${{ inputs.suite == 'all' || inputs.suite == 'selects' }}
    uses: ./.github/workflows/reusable-suite-arm.yml
    secrets: inherit
    with:
      name: selects
      suite: selects
      runner_type: type-cax41
      timeout: 180
      extra_args: ${{ inputs.extra_args }}
      package: ${{ inputs.package }}
      version: ${{ inputs.version }}
      ref: ${{ inputs.ref }}
      output_format: ${{ inputs.output_format }}
      artifact_bucket: ${{ inputs.artifacts }}
      artifact_name: ${{ inputs.artifact_name }}

  session_timezone:
    if: ${{ inputs.suite == 'all' || inputs.suite == 'session_timezone' }}
    uses: ./.github/workflows/reusable-suite-arm.yml
    secrets: inherit
    with:
      name: session_timezone
      suite: session_timezone
      runner_type: type-cax41
      timeout: 180
      extra_args: ${{ inputs.extra_args }}
      package: ${{ inputs.package }}
      version: ${{ inputs.version }}
      ref: ${{ inputs.ref }}
      output_format: ${{ inputs.output_format }}
      artifact_bucket: ${{ inputs.artifacts }}
      artifact_name: ${{ inputs.artifact_name }}

  ssl_server:
    if: ${{ inputs.suite == 'all' || inputs.suite == 'ssl_server' }}
    uses: ./.github/workflows/reusable-suite-arm.yml
    secrets: inherit
    with:
      name: ssl_server
      suite: ssl_server
      runner_type: type-cax41
      timeout: 360
      extra_args: ${{ inputs.extra_args }}
      package: ${{ inputs.package }}
      version: ${{ inputs.version }}
      ref: ${{ inputs.ref }}
      output_format: ${{ inputs.output_format }}
      artifact_bucket: ${{ inputs.artifacts }}
      artifact_name: ${{ inputs.artifact_name }}

  tiered_storage_local:
    if: ${{ inputs.suite == 'all' || inputs.suite == 'tiered_storage_local' || inputs.suite == 'tiered_storage_all' }}
    uses: ./.github/workflows/reusable-suite-arm.yml
    secrets: inherit
    with:
      name: tiered_storage_local
      suite: tiered_storage
      runner_type: type-cax51
      timeout: 180
      extra_args: ${{ inputs.extra_args }}
      package: ${{ inputs.package }}
      version: ${{ inputs.version }}
      ref: ${{ inputs.ref }}
      output_format: ${{ inputs.output_format }}
      artifact_bucket: ${{ inputs.artifacts }}
      artifact_name: ${{ inputs.artifact_name }}

  tiered_storage_minio:
    if: ${{ inputs.suite == 'all' || inputs.suite == 'tiered_storage_minio' || inputs.suite == 'tiered_storage_all' }}
    uses: ./.github/workflows/reusable-suite-arm.yml
    secrets: inherit
    with:
      name: tiered_storage_minio
      suite: tiered_storage
      runner_type: type-cax51
      timeout: 180
      extra_args: ${{ inputs.extra_args }} --with-minio
      package: ${{ inputs.package }}
      version: ${{ inputs.version }}
      ref: ${{ inputs.ref }}
      output_format: ${{ inputs.output_format }}
      artifact_bucket: ${{ inputs.artifacts }}
      artifact_name: ${{ inputs.artifact_name }}

  window_functions:
    if: ${{ inputs.suite == 'all' || inputs.suite == 'window_functions' }}
    uses: ./.github/workflows/reusable-suite-arm.yml
    secrets: inherit
    with:
      name: window_functions
      suite: window_functions
      runner_type: type-cax41
      timeout: 180
      extra_args: ${{ inputs.extra_args }}
      package: ${{ inputs.package }}
      version: ${{ inputs.version }}
      ref: ${{ inputs.ref }}
      output_format: ${{ inputs.output_format }}
      artifact_bucket: ${{ inputs.artifacts }}
      artifact_name: ${{ inputs.artifact_name }}
