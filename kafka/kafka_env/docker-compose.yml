version: '2.3'

services:
  zookeeper1:
    extends:
      file: ../../helpers/docker/zookeeper-service.yml
      service: zookeeper1

  zookeeper2:
    extends:
      file: ../../helpers/docker/zookeeper-service.yml
      service: zookeeper2

  zookeeper3:
    extends:
      file: ../../helpers/docker/zookeeper-service.yml
      service: zookeeper3

  keeper1:
    extends:
      file: ../../helpers/docker/keeper-service.yml
      service: keeper1

  keeper2:
    extends:
      file: ../../helpers/docker/keeper-service.yml
      service: keeper2

  keeper3:
    extends:
      file: ../../helpers/docker/keeper-service.yml
      service: keeper3

  clickhouse1:
    extends:
      file: clickhouse-service.yml
      service: clickhouse
    hostname: clickhouse1
    volumes:
        - ${CLICKHOUSE_TESTS_DIR}/_instances/clickhouse1/database/:/var/lib/clickhouse/
        - ${CLICKHOUSE_TESTS_DIR}/_instances/clickhouse1/logs/:/var/log/clickhouse-server/
        - ${CLICKHOUSE_TESTS_DIR}/configs/clickhouse1/macros.xml:/etc/clickhouse-server/config.d/macros.xml
    depends_on:
      zookeeper1:
        condition: service_healthy

  clickhouse2:
    extends:
      file: clickhouse-service.yml
      service: clickhouse
    hostname: clickhouse2
    volumes:
        - ${CLICKHOUSE_TESTS_DIR}/_instances/clickhouse2/database/:/var/lib/clickhouse/
        - ${CLICKHOUSE_TESTS_DIR}/_instances/clickhouse2/logs/:/var/log/clickhouse-server/
        - ${CLICKHOUSE_TESTS_DIR}/configs/clickhouse2/macros.xml:/etc/clickhouse-server/config.d/macros.xml
    depends_on:
      zookeeper1:
        condition: service_healthy

  clickhouse3:
    extends:
      file: clickhouse-service.yml
      service: clickhouse
    hostname: clickhouse3
    volumes:
        - ${CLICKHOUSE_TESTS_DIR}/_instances/clickhouse3/database/:/var/lib/clickhouse/
        - ${CLICKHOUSE_TESTS_DIR}/_instances/clickhouse3/logs/:/var/log/clickhouse-server/
        - ${CLICKHOUSE_TESTS_DIR}/configs/clickhouse3/macros.xml:/etc/clickhouse-server/config.d/macros.xml
    depends_on:
      zookeeper1:
        condition: service_healthy

  kafka1:
    extends:
      file: kafka-service.yml
      service: kafka
    hostname: kafka1
    environment:
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka1:9092
      - KAFKA_BROKER_ID=1
      - BOOTSTRAP_SERVERS=kafka1:9092,kafka2:9092,kafka3:9092
    healthcheck:
      test: echo dump | nc ${CLICKHOUSE_TESTS_COORDINATOR}1 2181 | grep '/brokers/ids/1'
    depends_on:
        zookeeper1:
          condition: service_healthy

  kafka2:
    extends:
      file: kafka-service.yml
      service: kafka
    hostname: kafka2
    environment:
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka2:9092
      - KAFKA_BROKER_ID=2
      - BOOTSTRAP_SERVERS=kafka1:9092,kafka2:9092,kafka3:9092
    healthcheck:
      test: echo dump | nc ${CLICKHOUSE_TESTS_COORDINATOR}1 2181 | grep '/brokers/ids/2'
    depends_on:
        zookeeper1:
          condition: service_healthy

  kafka3:
    extends:
      file: kafka-service.yml
      service: kafka
    hostname: kafka3
    environment:
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka3:9092
      - KAFKA_BROKER_ID=3
      - BOOTSTRAP_SERVERS=kafka1:9092,kafka2:9092,kafka3:9092
    healthcheck:
      test: echo dump | nc ${CLICKHOUSE_TESTS_COORDINATOR}1 2181 | grep '/brokers/ids/3'
    depends_on:
        zookeeper1:
          condition: service_healthy

  # dummy service which do nothing, but allows to postpone
  # 'docker-compose up -d' till all dependecies will go healthy
  all_services_ready:
    image: hello-world
    depends_on:
      clickhouse1:
        condition: service_healthy
      clickhouse2:
        condition: service_healthy
      zookeeper1:
        condition: service_healthy
      zookeeper2:
        condition: service_healthy
      zookeeper3:
        condition: service_healthy
      keeper1:
        condition: service_healthy
      keeper2:
        condition: service_healthy
      keeper3:
        condition: service_healthy
      kafka1:
        condition: service_healthy
      kafka2:
        condition: service_healthy
      kafka3:
        condition: service_healthy
